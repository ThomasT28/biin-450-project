# Homework 1 - ADV BIIN 

# OBJECTIVE
# 1. Identify all p-loop motifs of [A or G]XXXXGK[S or T]
# 2. Count number of p-loop motifs found in each FASTA section.
# 3. Count total number of p-loop motifs found in every FASTA section collectively. 


# TIPS
# Regular Expression Syntax
# [XY] = X or Y
# \s = Any unicode character (newline, tab etc.)
# ? = Could be found 0 or more than 1 times
# X = Must be X, no other possible
# Some Expression (Num) = That expression must be found (num) times in a row 
# Dealing with FASTA Files
# handy.split('\n\n') will divide a FASTA file with multiple headers into each FASTA section in a list

### PROGRAM START ###

# Import Modules
import re 

# Prepare Data File
file = open('AB_ploop_seqs.txt')
file = file.read()
all_fasta_sequences = file.split('\n\n') #Splits the entire FASTA file (Split by the '>' char next time?)

# Tracking Variables
ploop_count = 0
total_ploop_count = 0
ploop_count_list = [] # Will contain (FASTA header, ploop_count for that section)

# Main Code Loop
for fasta in all_fasta_sequences:

    # Remove FASTA Head
    temp = fasta.split('\n')
    head = temp[0]
    del temp[0]
    fasta = ''.join(temp)

    # Regular Expression Matching and Data Logging 
    x = re.findall(r'[AG][ARNDBCEQZGHILKMFPSTWYV]{4}GK[ST]', fasta) # RE: [A or G]XXXXGK[S or T]

    if x != None and len(x) > 0:                            # Identify useful FASTA sections for logging

        ploop_count = len(x)                                # Log num of ploop motifs
        total_ploop_count += ploop_count                    # Update total ploop motifs
        ploop_count_list.append((head, ploop_count))        # Update list of FASTA sequences and the num of ploop motifs

print('Total p-Loop Motifs: ', total_ploop_count, '\n')

# print(ploop_count_list) # Print Out Log (disabled)




